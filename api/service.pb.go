// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	MInput
	MOutput
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MInput struct {
	Id    int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Input string `protobuf:"bytes,2,opt,name=input" json:"input,omitempty"`
}

func (m *MInput) Reset()                    { *m = MInput{} }
func (m *MInput) String() string            { return proto.CompactTextString(m) }
func (*MInput) ProtoMessage()               {}
func (*MInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MInput) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MInput) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

type MOutput struct {
	Id     int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Output string `protobuf:"bytes,2,opt,name=output" json:"output,omitempty"`
}

func (m *MOutput) Reset()                    { *m = MOutput{} }
func (m *MOutput) String() string            { return proto.CompactTextString(m) }
func (*MOutput) ProtoMessage()               {}
func (*MOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MOutput) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MOutput) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*MInput)(nil), "api.MInput")
	proto.RegisterType((*MOutput)(nil), "api.MOutput")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StateMachine service

type StateMachineClient interface {
	Run(ctx context.Context, in *MInput, opts ...grpc.CallOption) (*MOutput, error)
}

type stateMachineClient struct {
	cc *grpc.ClientConn
}

func NewStateMachineClient(cc *grpc.ClientConn) StateMachineClient {
	return &stateMachineClient{cc}
}

func (c *stateMachineClient) Run(ctx context.Context, in *MInput, opts ...grpc.CallOption) (*MOutput, error) {
	out := new(MOutput)
	err := grpc.Invoke(ctx, "/api.StateMachine/Run", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StateMachine service

type StateMachineServer interface {
	Run(context.Context, *MInput) (*MOutput, error)
}

func RegisterStateMachineServer(s *grpc.Server, srv StateMachineServer) {
	s.RegisterService(&_StateMachine_serviceDesc, srv)
}

func _StateMachine_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateMachineServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.StateMachine/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateMachineServer).Run(ctx, req.(*MInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StateMachine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.StateMachine",
	HandlerType: (*StateMachineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _StateMachine_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0xd2,
	0xe3, 0x62, 0xf3, 0xf5, 0xcc, 0x2b, 0x28, 0x2d, 0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62, 0xca, 0x4c, 0x11, 0x12, 0xe1, 0x62, 0xcd, 0x04, 0x49, 0x48,
	0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x38, 0x4a, 0x86, 0x5c, 0xec, 0xbe, 0xfe, 0xa5, 0x25,
	0xd8, 0x34, 0x88, 0x71, 0xb1, 0xe5, 0x83, 0x65, 0xa0, 0x3a, 0xa0, 0x3c, 0x23, 0x03, 0x2e, 0x9e,
	0xe0, 0x92, 0xc4, 0x92, 0x54, 0xdf, 0xc4, 0xe4, 0x8c, 0xcc, 0xbc, 0x54, 0x21, 0x05, 0x2e, 0xe6,
	0xa0, 0xd2, 0x3c, 0x21, 0x6e, 0xbd, 0xc4, 0x82, 0x4c, 0x3d, 0x88, 0xe5, 0x52, 0x3c, 0x10, 0x0e,
	0xc4, 0xe4, 0x24, 0x36, 0xb0, 0x03, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x35, 0x3f,
	0x8d, 0xb1, 0x00, 0x00, 0x00,
}
